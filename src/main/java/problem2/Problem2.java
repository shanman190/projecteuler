package problem2;

import java.util.ArrayList;
import java.util.List;

public class Problem2 {

	/**
	 * Problem 2:
	 * 
	 * Each new term in the Fibonacci sequence is generated by adding the
	 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not exceed 
	 * four million, find the sum of the even-valued terms.
	 */
	public static void main(String[] args) {
		List<Long> fib = new ArrayList<>();
		fib.add(1L);
		fib.add(2L);
		while (fib.get(fib.size() - 1) <= 4000000) {
			int size = fib.size();
			fib.add(fib.get(size - 1) + fib.get(size - 2));
		}
		System.out.println(
				fib
					.stream()
					.filter(i -> { return i % 2 == 0; })
					.reduce(0L, Long::sum));
	}
}
