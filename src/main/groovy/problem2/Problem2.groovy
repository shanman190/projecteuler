package shanman190.problem2

// Each new term in the Fibonacci sequence is generated by adding
// the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

// Original solution
def total = 0, fibber = new Fibber()

while(true) {
	def i = fibber.next()
	if(i >= 4000000) break
	if(i % 2 == 0) total += i
}

println total

// Improved solution
fib = [1, 2]
while (fib.last() <= 4000000) fib << fib[-1] + fib[-2]
println(fib[0..-2].sum { it % 2 == 0 ? it : 0 })